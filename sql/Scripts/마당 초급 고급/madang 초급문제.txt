/*
02. SQL 개요
예) 김연아 고객의 전화번호를 찾으시오.

3.1.1 SELECT/FROM
3-1 모든 도서의 이름과 가격을 검색하시오.

(3-1 변형) 모든 도서의 가격과 이름을 검색하시오.

3-2 모든 도서의 도서번호, 도서이름,출판사,가격을 검색하시오.

3-3 도서 테이블에 있는 모든 출판사를 검색하시오.

3.1.2 WHERE 조건

3-4 가격이 20,000원 미만인 도서를 검색하시오.

3-5 가격이 10,000원 이상 20,000 이하인 도서를 검색하시오.

3-6 출판사가 '굿스포츠'혹은 '대한미디어'인 도서를 검색하시오.

3-7 '축구의 역사'를 출간한 출판사를 검색하시오.

3-8 도서이름에 '축구'가 포함한 출판사를 검색하시오.

3-9 도서이름의 왼쪽 두 번째 위치에 '구'라는 문자열을 갖는 도서를 검색하시오.

3-10 축구에 관한 도서 중 가격이 20,000원 이상인 도서를 검색하시오.

3-11 출판사가 '굿스포츠' 혹은 '대한미디어'인 도서를 검색하시오.

3-12 도서를 이름순으로 검색하시오

3-13 도서를 가격순으로 검색하고, 가격이 같으면 이름순으로 검색하시오

3-14 도서를 가격의 내림차순으로 검색하시오. 만약 가격이 같다면 출판사의 오름차순으로 검색한다.

3-15 고객이 주문한 도서의 총 판매액을 구하시오.

3-16 2번 김연아 고객이 주문한 도서의 총 판매액을 구하시오.

3-17 고객이 주문한 도서의 총판매액, 평균값, 최저가, 최고가를 구하시오

3-18 마당서점의 도서 판매 건수를 구하시오.

3.2.2 GROUP BY
3-19 고객별로 주문한 도서의 총 수량과 총 판매액을 구하시오.

3-20 가격이 8,000원 이상인 도서를 구매한 고객에 대하여 고객별 주문 도서의 총 수량을 구하시오. 단, 두권 이상 구매한 고객만 구한다.

3-21 고객과 고객의 주문에 관한 데이터를 모두 보이시오.

3-22 고객과 고객의 주문에 관한 데이터를 고객번호 순으로 정렬하여 보이시오.

3-23 고객의 이름과 고객이 주문한 도서의 판매가격을 검색하시오.

3-24 고객별로 주문한 모든 도선의 총 판매액을 구하고, 고객별로 정령하시오.

3-25 고객의 이름과 고객이 주문한 도서의 이름을 구하시오.

3-26 가격이 20,000원인 도서를 주문한 고객의 이름과 도서의 이름을 구하시오.

3-27 도서를 구매하지 않은 고객의 포함하여 고객의 이름과 고객이 주문한 도서의 판매가격을 구하시오.

3.3.2 부속질의
3-28 가장 비싼 도서의 이름을 보이시오.

3-29 도서를 구매한 적이 있는 고객의 이름을 검색하시오.

3-30 대한미디어에서 출판한 도서를 구매한 고객의 이름을 보이시오.

3-31 출판사별로 출판사의 평균 도서 가격보다 비싼 도서를 구하시오.

3-32 도서를 주문하지 않은 고객의 이름을 보이시오.

3-33 주문이 있는 고객의 이름과 주소를 보이시오.

4.1 CREATE 문
3-34 다음과 같은 속성을 가진 NewBook 테이블을 생성하시오. 정수형은 NUMBER를, 문자형은 가변형 문자타입인 VARCHAR2를 사용한다.
  bookid	NUMBER,
bookname  VARCHAR2(20),
publisher  VARCHAR2(20),
price      NUMBER);


3-35 다음과 같은 속성을 가진 NewCustomer 테이블을 생성하시오.
-custid(고객번호) NUMBER, 기본키
-name(이름)-VARCHAR2(40)
-address(주소)-VARCHAR2(40)
-phone(전화번호)-VARCHAR2(30)

3-36 다음과 같은 속성을 가진 NewOrders 테이블을 생성하시오.
-orderid(주문번호)- NUMBER, 기본키
-custid(고객번호)- NUMBER, NOT NULL 제약조건, 외래키(NewCustomer.custid, 인쇄삭제)
-bookid(도서번호)- NUMBER, NOT NULL 제약조건
-saleprice(판매가격)-NUMBER
-orderdate(판매일자)-DATE

4.2 ALTER문
3-37 NewBook 테이블에 VARCHAR2(13)의 자료형을 가진 isbn 속성을 추가하시오.

3-38 NewBook 테이블의 isbn 속성의 데이터 타입을 NUMBER형으로 변경하시오.

3-39 NewBook 테이블의 isbn 속성을 삭제하시오.

3-40 NewBook 테이블의 bookid 속성에 NOT NULL 제약조건을 적용하시오.

3-41 NewBook 테이블의 bookid 속성을 기본키로 변경하시오.

4.3 DROP 문
3-42 NewBook 테이블을 삭제하시오.

3-43 NewCustomer 테이블을 삭제하시오. 만약 삭제가 거절된다면 원인을 파악하고 관련된 테이블을 같이 삭제하시오(NewOrders 테이블이 NewCustomer를 참조하고 있음).



*/